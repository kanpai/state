apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: matrix-certificate
spec:
  issuerRef:
    kind: ClusterIssuer
    name: scaleway-letsencrypt
  secretName: matrix-api-tls
  commonName: kanp.ai
  dnsNames:
    - kanp.ai
    - matrix.kanp.ai
---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: matrix-redirect-insecure
# spec:
#   entryPoints:
#     - web
#   routes:
#     - match: Host(`shuu.ru`) || Host(`matrix.shuu.ru`)
#       kind: Rule
#       middlewares:
#         - name: redirect-https
#           namespace: traefik

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: well-known
spec:
  entryPoints:
    - websecure
  tls:
    secretName: matrix-api-tls
  routes:
    - match: Host(`kanp.ai`) && PathPrefix(`/.well-known/matrix/`)
      kind: Rule
      services:
        - name: well-known
          scheme: http
          port: http
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: matrix-api
spec:
  entryPoints:
    - websecure
  tls:
    secretName: matrix-api-tls
  routes:
    - match: Host(`matrix.kanp.ai`) && Path(`/_matrix/client/{url:.*?/(sync|user/(.*/filter(/.*)?)|keys/changes|rooms/.*/messages)$}`)
      kind: Rule
      services:
        - name: sync-api
          scheme: http
          port: sync-api
    - match: Host(`matrix.kanp.ai`) && PathPrefix(`/_matrix/client`)
      kind: Rule
      services:
        - name: client-api
          scheme: http
          port: client-api
    - match: Host(`matrix.kanp.ai`) && PathPrefix(`/_matrix/{url:(federation|key)}`)
      kind: Rule
      services:
        - name: federation-api
          scheme: http
          port: federation-api
    - match: Host(`matrix.kanp.ai`) && PathPrefix(`/_matrix/media`)
      kind: Rule
      services:
        - name: media-api
          scheme: http
          port: media-api
