apiVersion: v1
kind: Service
metadata:
  name: user-api
spec:
  ports:
    - port: 7781
      name: user-api
  selector:
    app: user-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-api
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: user-api
  template:
    metadata:
      labels:
        app: user-api
    spec:
      volumes:
        - name: config
          configMap:
            name: dendrite-config
        - name: certificate
          secret:
            secretName: matrix-tls
            optional: false
        - name: matrix-key
          secret:
            secretName: matrix-key
            optional: false
        - name: matrix-key-old
          projected:
            sources:
              - secret:
                  name: old-matrix-keys
      containers:
        - name: user-api
          image: docker.io/matrixdotorg/dendrite-polylith:latest
          args: ["userapi"]
          volumeMounts:
            - name: config
              subPath: config.yaml
              mountPath: /etc/dendrite/dendrite.yaml
              readOnly: true
            - name: certificate
              subPath: tls.crt
              mountPath: /etc/dendrite/server.crt
              readOnly: true
            - name: certificate
              subPath: tls.key
              mountPath: /etc/dendrite/server.key
              readOnly: true
            - name: matrix-key
              subPath: private.key
              mountPath: /etc/dendrite/matrix_key.pem
              readOnly: true
            - name: matrix-key-old
              mountPath: /etc/dendrite/old-keys/
              readOnly: true
          # tcp liveness probe on api port
---
apiVersion: v1
kind: Service
metadata:
  name: user-api-database
  labels:
    app: user-api-database
spec:
  ports:
    - port: 5432
      name: database
  selector:
    app: user-api-database
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: user-api-database
spec:
  selector:
    matchLabels:
      app: user-api-database
  serviceName: "user-api-database"
  replicas: 1
  template:
    metadata:
      labels:
        app: user-api-database
    spec:
      volumes:
        - name: database
          persistentVolumeClaim:
            claimName: user-api-database
      containers:
        - name: postgres
          image: docker.io/postgres:14.4-alpine
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: database
              mountPath: /var/lib/postgresql
          env:
            - name: POSTGRES_INITDB_ARGS
              value: "--lc-collate=en_GB.UTF_8"
            - name: POSTGRES_DB
              value: "userapi"
            - name: POSTGRES_USER
              value: "userapi"
            - name: POSTGRES_PASSWORD
              value: "userapi" # use sealed secret
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - userapi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-api-database
spec:
  storageClassName: scw-bssd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
